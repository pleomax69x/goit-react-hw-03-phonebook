{"version":3,"sources":["components/ContactList.jsx","components/ContactForm.jsx","components/Filter.jsx","App.js","index.js"],"names":["ContactList","visibleContacts","deleteContact","map","id","name","number","type","onClick","ContactForm","onSubmit","useState","setName","setNumber","e","preventDefault","alert","placeholder","value","onChange","currentTarget","Filter","filter","handleFilterChange","App","contacts","setContacts","setFilter","getVisibleContacts","contact","toLowerCase","includes","useEffect","webContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","find","newContact","uuidv4","contactId","deleteCon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAeeA,EAfK,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cACtC,OACE,6BACGD,EAAgBE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,+BACGD,EADH,KACWC,EACT,wBAAQC,KAAK,SAASC,QAAS,kBAAMN,EAAcE,IAAnD,sBAFOA,SC8CFK,EAjDK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAC7BN,EAD6B,KACvBO,EADuB,OAERD,mBAAS,IAFD,mBAE7BL,EAF6B,KAErBO,EAFqB,KAqBpC,OACE,mCACE,uBAAMH,SAhBW,SAACI,GACpBA,EAAEC,iBAEGV,GAASC,GAKdI,EAASL,EAAMC,GAEfM,EAAQ,IACRC,EAAU,KAPRG,MAAM,wBAYN,UACE,yCAEE,uBACET,KAAK,OACLF,KAAK,OACLY,YAAY,aACZC,MAAOb,EACPc,SA3Be,SAACL,GAAD,OAAOF,EAAQE,EAAEM,cAAcF,aA8BlD,2CAEE,uBACEX,KAAK,MACLF,KAAK,SACLY,YAAY,eACZC,MAAOZ,EACPa,SApCiB,SAACL,GAAD,OAAOD,EAAUC,EAAEM,cAAcF,aAuCtD,wBAAQX,KAAK,SAAb,+BC7BOc,EAhBA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBACxB,OACE,qCACE,qDACA,gCACE,uBACEhB,KAAK,OACLF,KAAK,SACLa,MAAOI,EACPH,SAAUI,EACVN,YAAY,6BC+DPO,EAlEH,WAAO,IAAD,EACgBb,mBAAS,CACvC,CAAEP,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,eALhC,mBACTmB,EADS,KACCC,EADD,OAQYf,mBAAS,IARrB,mBAQTW,EARS,KAQDK,EARC,KA+BVC,EAAqBH,EAASH,QAAO,SAACO,GAAD,OACzCA,EAAQxB,KAAKyB,cAAcC,SAAST,EAAOQ,kBAoB7C,OAZAE,qBAAU,WACR,IAAMC,EAAcC,aAAaC,QAAQ,YACnCC,EAAiBC,KAAKC,MAAML,GAC9BG,GACFV,EAAY,YAAIU,MAEjB,IAEHJ,qBAAU,WACRE,aAAaK,QAAQ,WAAYF,KAAKG,UAAUf,MAC/C,CAACA,IAGF,qCACE,2CACA,cAAC,EAAD,CAAaf,SA3CS,SAACL,EAAMC,GAK/B,KAJwBmB,EAASgB,MAC/B,SAACZ,GAAD,OAAaA,EAAQxB,KAAKyB,gBAAkBzB,EAAKyB,iBAIjDd,MAAM,GAAD,OAAIX,EAAJ,gCADP,CAKA,IAAMqC,EAAa,CACjBtC,GAAIuC,cACJtC,KAAMA,EACNC,OAAQA,GAGVoB,EAAY,GAAD,mBAAKD,GAAL,CAAeiB,SA4BxB,0CACA,cAAC,EAAD,CAAQnB,mBA/Ce,SAACT,GAAD,OAAOa,EAAUb,EAAEM,cAAcF,QA+CRI,OAAQA,IACxD,cAAC,EAAD,CACErB,gBAAiB2B,EACjB1B,cAzBgB,SAAC0C,GACrB,IAAMC,EAAYpB,EAASH,QAAO,SAACO,GAAD,OAAaA,EAAQzB,KAAOwC,KAC9DlB,EAAY,YAAImB,WCvCpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f9d53f2.chunk.js","sourcesContent":["const ContactList = ({ visibleContacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button type=\"button\" onClick={() => deleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState } from \"react\";\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleNameChange = (e) => setName(e.currentTarget.value);\r\n  const handleNumberChange = (e) => setNumber(e.currentTarget.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !number) {\r\n      alert(\"Some field is empty\");\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter Number\"\r\n            value={number}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","const Filter = ({ filter, handleFilterChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contact by name</p>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Enter name to find\"\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  const handleFilterChange = (e) => setFilter(e.currentTarget.value);\n\n  const formSubmitHandler = (name, number) => {\n    const isUnicContact = !!contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isUnicContact) {\n      alert(`${name} is alredy in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    setContacts([...contacts, newContact]);\n  };\n\n  const getVisibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const deleteContact = (contactId) => {\n    const deleteCon = contacts.filter((contact) => contact.id !== contactId);\n    setContacts([...deleteCon]);\n  };\n\n  useEffect(() => {\n    const webContacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(webContacts);\n    if (parsedContacts) {\n      setContacts([...parsedContacts]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n      <ContactList\n        visibleContacts={getVisibleContacts}\n        deleteContact={deleteContact}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}